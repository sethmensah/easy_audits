# Generated by Django 3.1.2 on 2021-03-02 14:03

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditScope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(verbose_name='Review Date')),
                ('period_covered', models.CharField(max_length=300, verbose_name='Period Covered')),
                ('audit_objective', models.TextField(verbose_name='Specific Audit Objective')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=100, verbose_name='District Name')),
            ],
        ),
        migrations.CreateModel(
            name='EntityDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(max_length=300, verbose_name='Entity Type')),
                ('entity_address', models.CharField(max_length=300, verbose_name='Entity Address')),
                ('employee_no', models.CharField(blank=True, max_length=300, null=True, verbose_name='Total Employee')),
                ('locality', models.CharField(blank=True, max_length=300, null=True, verbose_name='Locality')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('district_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.district')),
            ],
        ),
        migrations.CreateModel(
            name='ExpensesCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100, verbose_name='Region Name')),
            ],
        ),
        migrations.CreateModel(
            name='UserTrail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('action', models.CharField(blank=True, max_length=100, null=True)),
                ('now', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.DateField(default=datetime.date.today)),
                ('crud', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnpresentedPaymentVouchers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('voucher_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Payment Voucher Number')),
                ('cheque_num', models.CharField(blank=True, max_length=300, null=True, verbose_name='Cheque Number')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount Paid')),
                ('payee_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Payee Name')),
                ('purpose_of_payment', models.CharField(blank=True, max_length=300, null=True, verbose_name='Purpose of Payment')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unpresentedpaymentvouchers', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Member Name')),
                ('member_position', models.CharField(blank=True, max_length=300, null=True, verbose_name='Member Position')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managementdetails', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='FundsUtilized',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_date', models.DateField(blank=True, null=True, verbose_name='Expense Date')),
                ('closing_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Closing Balance')),
                ('payment_voucher_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Payment Voucher Number')),
                ('amount_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount Spent')),
                ('cheque_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Cheque Number')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description')),
                ('source_of_funds', models.CharField(blank=True, max_length=300, null=True, verbose_name='Source of Funds')),
                ('payee', models.CharField(blank=True, max_length=300, null=True, verbose_name='Payee Name')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True, verbose_name='Remarks')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fundsutilized', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='FundsReceived',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_date', models.DateField(blank=True, null=True, verbose_name='Receipt Date')),
                ('opening_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Opening Balance')),
                ('gcr_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='GCR Number')),
                ('cheque_details', models.CharField(blank=True, max_length=300, null=True, verbose_name='Cheque Details')),
                ('amount_received', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount Received')),
                ('fund_received_type', models.CharField(blank=True, max_length=300, null=True, verbose_name='Fund Received Type')),
                ('purpose_of_receipt', models.CharField(blank=True, max_length=300, null=True, verbose_name='Purpose of Receipt')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fundsreceived', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.CharField(max_length=100, verbose_name='Facility Name')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.district')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.region')),
            ],
        ),
        migrations.CreateModel(
            name='ExpensesType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=200, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expensestype', to='app.expensescategory')),
            ],
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_date', models.DateField(blank=True, null=True, verbose_name='Expense Date')),
                ('payment_voucher', models.CharField(max_length=100, null=True)),
                ('cheque_number', models.CharField(max_length=100, null=True)),
                ('payee', models.CharField(max_length=100, null=True)),
                ('description', models.CharField(max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, max_length=100, null=True)),
                ('tax_withheld', models.DecimalField(blank=True, decimal_places=2, max_digits=12, max_length=100, null=True, verbose_name='Withheld Tax')),
                ('memo_approved', models.CharField(max_length=100, null=True, verbose_name='Memo Approved')),
                ('pv_approved', models.CharField(max_length=100, null=True, verbose_name='Voucher Approved')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.expensescategory')),
                ('expense_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.expensestype')),
                ('scope_covered', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenditure', to='app.auditscope')),
            ],
        ),
        migrations.AddField(
            model_name='entitydetails',
            name='facility_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.facility', verbose_name='Facility Name'),
        ),
        migrations.AddField(
            model_name='entitydetails',
            name='region_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.region'),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.region'),
        ),
        migrations.CreateModel(
            name='CommodityUtilized',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_issued_date', models.DateField(blank=True, null=True, verbose_name='Commodity Issued Date')),
                ('commodity_type_issued', models.CharField(blank=True, max_length=300, null=True, verbose_name='Commodity Type Issued')),
                ('quantity_issued', models.CharField(blank=True, max_length=300, null=True, verbose_name='Quantity Issued')),
                ('requisition_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Requisition Number')),
                ('user_department', models.CharField(blank=True, max_length=300, null=True, verbose_name='User Department')),
                ('remarks_on_commodity_issued', models.CharField(blank=True, max_length=300, null=True, verbose_name='Remarks on Commodity Issued')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commodityutilized', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='CommodityReceived',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_receipt_date', models.DateField(blank=True, null=True, verbose_name='Commodity Receipt Date')),
                ('commodity_type_received', models.CharField(blank=True, max_length=300, null=True, verbose_name='Commodity Type Received')),
                ('quantity_received', models.CharField(blank=True, max_length=300, null=True, verbose_name='Quantity Received')),
                ('SRA_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='SRA Number')),
                ('remarks_on_commodity_received', models.CharField(blank=True, max_length=300, null=True, verbose_name='Remarks on Commodity Received')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commodityreceived', to='app.entitydetails')),
            ],
        ),
        migrations.CreateModel(
            name='BankLodgment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgment_date', models.DateField(blank=True, null=True, verbose_name='Lodgment Date')),
                ('pay_in_slip_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Pay-in-slip Number')),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount Paid')),
                ('bank_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Bank Name')),
                ('account_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Account Number')),
                ('type_of_fund', models.CharField(blank=True, max_length=300, null=True, verbose_name='Type of Fund')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banklodgment', to='app.entitydetails')),
            ],
        ),
        migrations.AddField(
            model_name='auditscope',
            name='auditee_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_scope', to='app.entitydetails'),
        ),
        migrations.CreateModel(
            name='AuditorDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auditor_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Auditor Name')),
                ('auditor_role', models.CharField(blank=True, max_length=300, null=True, verbose_name='Auditor Role')),
                ('entity_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auditordetails', to='app.entitydetails')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.district'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_facility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.facility'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.region'),
        ),
    ]
